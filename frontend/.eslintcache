[{"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\index.js":"1","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\App.js":"2","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\data.js":"4","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\ProductScreen.jsx":"5","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\HomeScreen.jsx":"6","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\store.js":"7","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\reducers\\productListReducer.js":"8","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\constants\\loadingconstants.js":"9","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\actions\\action.js":"10","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\CartScreen.jsx":"11","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\reducers\\cartReducer.js":"12","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\constants\\cartconstants.js":"13","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\actions\\cartaction.js":"14","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\SignInScreen.jsx":"15","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\actions\\signinaction.js":"16","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\constants\\signinconstants.js":"17","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\reducers\\usersigninReducer.js":"18","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\RegisterScreen.jsx":"19","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\ProductsScreen.jsx":"20","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\ShippingScreen.jsx":"21","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\components\\checkoutsteps.js":"22","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\PaymentScreen.jsx":"23","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\PlaceOrderScreen.jsx":"24"},{"size":572,"mtime":1609554457802,"results":"25","hashOfConfig":"26"},{"size":2738,"mtime":1610626777917,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":1090,"mtime":1609299458289,"results":"29","hashOfConfig":"26"},{"size":1993,"mtime":1610548345248,"results":"30","hashOfConfig":"26"},{"size":1353,"mtime":1609549422021,"results":"31","hashOfConfig":"26"},{"size":1102,"mtime":1610638829896,"results":"32","hashOfConfig":"26"},{"size":2686,"mtime":1610533794245,"results":"33","hashOfConfig":"26"},{"size":959,"mtime":1610533519070,"results":"34","hashOfConfig":"26"},{"size":2800,"mtime":1610533808448,"results":"35","hashOfConfig":"26"},{"size":2447,"mtime":1609734125696,"results":"36","hashOfConfig":"26"},{"size":960,"mtime":1611156326044,"results":"37","hashOfConfig":"26"},{"size":283,"mtime":1610625403304,"results":"38","hashOfConfig":"26"},{"size":1378,"mtime":1610625445389,"results":"39","hashOfConfig":"26"},{"size":2150,"mtime":1610623939400,"results":"40","hashOfConfig":"26"},{"size":1191,"mtime":1610241223468,"results":"41","hashOfConfig":"26"},{"size":482,"mtime":1610240828554,"results":"42","hashOfConfig":"26"},{"size":1180,"mtime":1610202921261,"results":"43","hashOfConfig":"26"},{"size":2728,"mtime":1610559502169,"results":"44","hashOfConfig":"26"},{"size":6263,"mtime":1610623944915,"results":"45","hashOfConfig":"26"},{"size":2499,"mtime":1611156257883,"results":"46","hashOfConfig":"26"},{"size":419,"mtime":1610623492408,"results":"47","hashOfConfig":"26"},{"size":1393,"mtime":1610627807661,"results":"48","hashOfConfig":"26"},{"size":2942,"mtime":1611156597455,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1p4d1dx",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\index.js",[],["107","108"],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\App.js",["109"],"import data from \"./data\";\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport ProductScreen from \"./Screens/ProductScreen\";\nimport CartScreen from \"./Screens/CartScreen\";\nimport SignInScreen from \"./Screens/SignInScreen\";\nimport RegisterScreen from \"./Screens/RegisterScreen\";\nimport { useSelector } from \"react-redux\";\nimport ProductsScreen from \"./Screens/ProductsScreen\";\nimport ShippingScreen from \"./Screens/ShippingScreen\";\nimport PaymentScreen from \"./Screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./Screens/PlaceOrderScreen\";\n\n\nfunction App() {\n\nconst userSignin = useSelector(state=>state.userSignin);\nconst {userInfo} = userSignin;\nconst showmenu = () => {\n  document.querySelector(\".sidebar\").classList.add('sidebar-open');\n}\n\nconst closemenu = () => {\n  document.querySelector(\".sidebar\").classList.remove('sidebar-open');\n}\n  \n  return (\n      <BrowserRouter >\n    <div className=\"grid-container\">\n            <div className=\"header\">\n                <div className=\"brand\">\n                    <button className=\"hamburger-icon\" onClick={showmenu}>&#9776;</button>\n                    <Link to = \"/\">amazona</Link>\n                </div>\n                <div className=\"header-links\">\n                    <Link to=\"/cart\">Cart</Link>\n                    {userInfo ? <Link to =\"/profile\">{userInfo.name}</Link> : <Link to=\"/signin\">SignIn</Link>}\n                    \n                </div>\n            </div>\n            <aside className=\"sidebar\">\n                <h1>Shopping Categories</h1>\n                <button className=\"close-btn\" onClick={closemenu}>X</button>\n                <ul>\n                    <li>Pants</li>\n                    <li>Shoes</li>\n                </ul>\n            </aside>\n\n            <div className=\"main\">\n               <div className=\"content\">\n               <Route path=\"/products\" component = {ProductsScreen} />               \n               <Route path =\"/\" exact={true} component={HomeScreen} />\n               <Route path =\"/product/:id\" component = {ProductScreen} />\n               <Route path =\"/cart/:id?\" component={CartScreen} />\n               <Route path=\"/signin\" component={SignInScreen} />\n               <Route path=\"/register\" component={RegisterScreen} />\n               <Route path='/shipping' component = {ShippingScreen} />\n               <Route path='/payment' component = {PaymentScreen} />\n               <Route path='/placeorder' component = {PlaceOrderScreen} />\n                   \n               </div>\n            </div>\n            <div className=\"footer\">\n                All rights reserved\n            </div>\n\n        </div>\n        </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\data.js",["110"],"export default {\r\n    products:[\r\n        {\r\n        _id:'1',\r\n        name:'slim shirt',\r\n        brand:'nike',\r\n        category: 'shirt',\r\n        image:\"/images/d1.jpg\",\r\n        price:60,\r\n        rating:4.5,\r\n        numReviews:10\r\n\r\n    },\r\n    {\r\n        _id:'2',\r\n        name:'fat shirt',\r\n        brand:'h&M',\r\n        category: 'shirt',\r\n        image:\"/images/d1.jpg\",\r\n        price:50,\r\n        rating:3.5,\r\n        numReviews:12\r\n\r\n    },\r\n    {\r\n        _id:'3',\r\n        name:'slim shirt',\r\n        brand:'nike',\r\n        category: 'shirt',\r\n        image:\"/images/d1.jpg\",\r\n        price:60,\r\n        rating:4.5,\r\n        numReviews:10\r\n\r\n    }, {\r\n        _id:'4',\r\n        name:'fat shirt',\r\n        brand:'h&M',\r\n        category: 'shirt',\r\n        image:\"/images/d1.jpg\",\r\n        price:50,\r\n        rating:3.5,\r\n        numReviews:12\r\n\r\n    },\r\n    {\r\n        _id:'5',\r\n        name:'slim shirt',\r\n        brand:'nike',\r\n        category: 'shirt',\r\n        image:\"/images/d1.jpg\",\r\n        price:60,\r\n        rating:4.5,\r\n        numReviews:10\r\n\r\n    }\r\n\r\n\r\n    ]\r\n}","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\ProductScreen.jsx",["111","112"],"import React, { useEffect, useState } from 'react';\r\nimport data from '../data';\r\nimport {Link} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productItem } from '../actions/action';\r\n\r\nfunction ProductScreen(props){\r\n\r\n    const [Qty,setQty] = useState(1);\r\n\r\n    const productItemReducerState = useSelector(state=>state.productItem);\r\n    const {loading,product,error} = productItemReducerState;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        \r\n        dispatch(productItem(props.match.params.id));\r\n        \r\n        return () => {\r\n\r\n        };\r\n        \r\n    } , [] );\r\n  \r\n    return <div>\r\n        <div className=\"backtoresult\">\r\n            <Link to=\"/\">Back to result</Link>\r\n        </div>\r\n        {console.log(product)}\r\n        {loading?<div>Loading...</div>:\r\n        error?<div>{error}</div>:\r\n        (\r\n            <div className=\"details\">\r\n            <div className=\"details-image\">\r\n                <img src={product.image} alt=\"product\" />\r\n            </div>\r\n\r\n            <div className=\"details-info\">\r\n                <h1>{product.name}</h1>\r\n                <h2>Price : £{product.price}</h2>\r\n                <h3>{product.rating + ' star (' +product.numReviews + ')' }</h3>\r\n            </div>\r\n\r\n            <div className=\"details-action\">\r\n\r\n                <ul>\r\n                    <li>Qty: <select value ={Qty} onChange={(e)=>{setQty(e.target.value)}}>\r\n                        {product.countInStock>0 &&[...Array(product.countInStock).keys()].map(x => {\r\n                            return <option>{x+1}</option>\r\n                        })}\r\n                    </select></li>\r\n                    <li>\r\n                        <button class=\"btn btn-primary\" onClick={()=>props.history.push(\"/cart/\"+product._id+\"?qty=\"+Qty)}>add to cart</button> \r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport default ProductScreen;","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\HomeScreen.jsx",["113","114","115"],"import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productList } from '../actions/action';\r\n\r\n\r\nfunction HomeScreen(){\r\n\r\n    const productListReducerState = useSelector(state=>state.productList);\r\n    const {loading,products,error} = productListReducerState;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        dispatch(productList());\r\n        \r\n        return () => {\r\n\r\n        };\r\n        \r\n    } , [] );\r\n\r\n    return loading? <div>Loading...</div>:error?<div>{error}</div>:<ul className=\"products\">\r\n    {products.map(product =><li key = {product._id}>\r\n            <div className=\"product\">\r\n            <Link to={'/product/'+product._id}>\r\n                <img src={product.image} alt=\"shirtone\" className=\"product-image\" />\r\n                <div className=\"product-name\">\r\n                    {product.name}\r\n                </div></Link> \r\n                <div className=\"product-brand\">{product.brand}</div>\r\n                <div className=\"product-price\">{product.price}</div>\r\n                <div className=\"product-rating\">{product.rating} star ({product.numReviews} ratings)</div>\r\n            </div>\r\n        </li>)}\r\n        \r\n       \r\n    </ul>\r\n}\r\n\r\nexport default HomeScreen;","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\store.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\reducers\\productListReducer.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\constants\\loadingconstants.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\actions\\action.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\CartScreen.jsx",["116","117"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, deleteFromCart } from '../actions/cartaction';\r\n\r\nfunction CartScreen(props){\r\n    const product = props.match.params.id;\r\n    const qty = props.location.search?Number(props.location.search.split('=')[1]):1;\r\n    const dispatch = useDispatch();\r\n    const {cartItems} = useSelector(state => state.cart);\r\n    \r\n    useEffect(()=>{\r\n        if (product){\r\n            dispatch(addToCart(product,qty));\r\n        }\r\n        \r\n\r\n    },[]);\r\n\r\n    return <div className=\"cart\">\r\n    <div className=\"cart-list\">\r\n        <ul className=\"cart-list-container\">\r\n            <li>\r\n                <h1>Shopping cart</h1>\r\n                <div>Price</div>\r\n            </li>\r\n            <li>\r\n                {\r\n                    cartItems.length===0?<div>Cart is empty</div>:cartItems.map(item =>\r\n                    (<div className=\"cart-items-list\">\r\n                        <div class='cart-image'>\r\n                            <img src={item.img}/>\r\n                        </div>\r\n                        \r\n                        <div className='cart-name'>\r\n                            <div>{item.name}</div>\r\n                            <div>Qty: <select value={item.qty} onChange={(e)=>dispatch(addToCart(item.product,Number(e.target.value)))}>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                            </select>\r\n                            <button className =\"btn btn-danger\" onClick = {()=>dispatch(deleteFromCart(item.product))}>Delete</button>\r\n                            </div> \r\n                            \r\n                            </div>\r\n                        <div className='cart-price'>${item.price}</div>\r\n                       \r\n                    </div>)\r\n                    )\r\n                }\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n\r\n    <div className=\"cart-action\">\r\n        <h3>\r\n            Subtotal: {cartItems.reduce((a,c) => a+c.qty,0)} Items\r\n            ${cartItems.reduce((a,c)=>a+c.price*c.qty,0)}\r\n        </h3>\r\n\r\n        <button className=\"btn btn-primary btn-lg\"disabled={cartItems.length===0}>Proceed to checkout</button>       \r\n\r\n\r\n    </div>\r\n \r\n    </div>\r\n}\r\n\r\nexport default CartScreen;","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\constants\\cartconstants.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\actions\\cartaction.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\SignInScreen.jsx",["118","119"],"import { PromiseProvider } from 'mongoose';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { signin } from '../actions/signinaction';\r\n\r\n\r\nfunction SignInScreen(props){\r\n    const dispatch = useDispatch();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const userInfo = useSelector(state => state.userSignin);\r\n    const {loading, user, error } = userInfo;\r\n\r\n    const redirect = props.location.search?props.location.search.split('=')[1]:'/';\r\n    \r\n\r\n\r\n    useEffect(()=> {\r\n\r\n        if(user){\r\n            props.history.push(redirect);\r\n        }\r\n\r\n    },[userInfo]);\r\n\r\n    function submitHandler(e){\r\n        e.preventDefault();\r\n        dispatch(signin(email,password));\r\n\r\n    }\r\n    \r\n\r\n\r\n    return <div className=\"form\">\r\n    <form  onSubmit = {submitHandler}>\r\n\r\n        <ul className = \"form-container\">\r\n            <li><h3 className=\"h3 mb-3 font-weight-normal\"> Sign In </h3></li>\r\n            <li>\r\n                {loading&&<div>Loading...</div>}\r\n                {error&&<div>{error}</div>}\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input type=\"email\" name=\"email\" id=\"inputEmail\" onChange = {(e)=> setEmail(e.target.value)}  required autoFocus />\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"password\" >Password</label>\r\n                <input type=\"password\"  name='password' id=\"password\" onChange = {e=> setPassword(e.target.value)}required />\r\n      \r\n            </li>\r\n            <li>\r\n                 <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n\r\n            </li>\r\n            <li>\r\n                <p className=\"text-center\"> New to amazon</p>\r\n            </li>\r\n            <li>\r\n                <Link to = {redirect==='/'?\"/register\":\"/register?redirect=\"+redirect}className=\"text-center\">Register now</Link>\r\n            </li>\r\n        </ul> \r\n  \r\n\r\n    </form>\r\n  </div>\r\n}\r\n\r\nexport default SignInScreen;","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\actions\\signinaction.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\constants\\signinconstants.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\reducers\\usersigninReducer.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\RegisterScreen.jsx",["120","121","122"],"import { PromiseProvider } from 'mongoose';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { register } from '../actions/signinaction';\r\n\r\n\r\nfunction RegisterScreen(props){\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [repassword, setRepassword] = useState('');\r\n    const userInfo = useSelector(state => state.userRegister);\r\n    const { loading, user, error } = userInfo;\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search?props.location.search.split('=')[1]:'/';\r\n\r\n    useEffect(()=> {\r\n\r\n        if(user){\r\n            props.history.push(redirect);\r\n        }\r\n\r\n    },[userInfo]);\r\n\r\n    function submitHandler(e){\r\n        e.preventDefault();\r\n        dispatch(register(name,email,password));\r\n\r\n    }\r\n    \r\n\r\n\r\n    return <div className=\"form\">\r\n    <form  onSubmit = {submitHandler}>\r\n\r\n        <ul className = \"form-container\">\r\n            <li><h3 className=\"h3 mb-3 font-weight-normal\"> Register</h3></li>\r\n            <li>\r\n            {loading&&<div>Loading...</div>}\r\n                {error&&<div>{error}</div>}\r\n               \r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"name\">Full name</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" onChange = {(e)=> setName(e.target.value)}  required autoFocus />\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" onChange = {(e)=> setEmail(e.target.value)}  required autoFocus />\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"password\" >Password</label>\r\n                <input type=\"password\"  name='password' id=\"password\" onChange = {e=> setPassword(e.target.value)}required />\r\n      \r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"repassword\" >Re-Password</label>\r\n                <input type=\"password\"  name='repassword' id=\"repassword\" onChange = {e=> setRepassword(e.target.value)}required />\r\n      \r\n            </li>\r\n            <li>\r\n                 <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\r\n\r\n            </li>\r\n            <li>\r\n                <p className=\"text-center\"> Already have an account?</p>\r\n            </li>\r\n            <li>\r\n                <Link to = {redirect === '/'?'/signin':'/signin?redirect='+redirect} className=\"text-center\">Sign in</Link>\r\n            </li>\r\n        </ul> \r\n  \r\n\r\n    </form>\r\n  </div>\r\n}\r\n\r\nexport default RegisterScreen;","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\ProductsScreen.jsx",["123","124","125","126","127","128","129"],"import { PromiseProvider } from 'mongoose';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { productList, saveProduct, deleteProduct } from '../actions/action';\r\n\r\n\r\nfunction ProductsScreen(props){\r\n    const [modelVisible,setModelVisible] = useState(false);\r\n    const [id,setID] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n\r\n    const productsapi = useSelector(state=> state.productList);\r\n    const {loading, products,error} = productsapi;\r\n\r\n    const savedProduct = useSelector(state => state.saveProduct);\r\n    const {loading: saveLoading, success:saveSuccess, error: saveError } = savedProduct;\r\n\r\n    const deletedProduct = useSelector(state => state.deleteProduct);\r\n    const {loading: deleteLoading, success:deleteSuccess, error: deleteError } = deletedProduct;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(()=> {\r\n        if (saveSuccess) {\r\n            setModelVisible(false);\r\n\r\n        }\r\n        dispatch(productList());\r\n\r\n        \r\n\r\n    },[saveSuccess, deleteSuccess]);\r\n\r\n    function submitHandler(e){\r\n        e.preventDefault();\r\n        dispatch(saveProduct({_id:id,name,price,image,brand,category,description,countInStock}));\r\n\r\n    }\r\n\r\n    function productDeleteHandler(product_id){\r\n        dispatch(deleteProduct(product_id));\r\n    }\r\n\r\n    function openModel(product){\r\n        setModelVisible(true);\r\n        setID(product._id);\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setImage(product.image);\r\n        setDescription(product.description);\r\n        setCountInStock(product.countInStock);\r\n\r\n    }\r\n    \r\n\r\n\r\n    return <div className=\"content content-margin\">\r\n    <div className=\"product-headers\" >\r\n        <h3>Products</h3>\r\n        <button onClick ={()=>openModel({})}>Create product</button>\r\n    </div>\r\n    {modelVisible && <div className=\"form\">\r\n    <form  onSubmit = {submitHandler}>\r\n\r\n        <ul className = \"form-container\">\r\n            <li><h3 className=\"h3 mb-3 font-weight-normal\"> Enter new product details </h3></li>\r\n            <li>\r\n                {saveLoading&&<div>Loading...</div>}\r\n                {saveError&&<div>{saveError}</div>}\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"name\">Product Name</label>\r\n                <input type=\"text\" name=\"name\" value={name} id=\"name\" onChange = {(e)=> setName(e.target.value)}  required autoFocus />\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"price\" >Price</label>\r\n                <input type=\"Number\"  name='price' value={price} id=\"price\" onChange = {e=> setPrice(e.target.value)} required />\r\n      \r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"brand\">Brand</label>\r\n                <input type=\"text\" name=\"brand\" value ={brand}id=\"brand\" onChange = {(e)=> setBrand(e.target.value)}  required />\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"category\" >Category</label>\r\n                <input type=\"text\"  name='category'value={category} id=\"category\" onChange = {e=> setCategory(e.target.value)} required />\r\n      \r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"countInStock\">countInStock</label>\r\n                <input type=\"text\" name=\"countInStock\" value={countInStock} id=\"countInStock\" onChange = {(e)=> setCountInStock(e.target.value)}  required />\r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"image\" >Image</label>\r\n                <input type=\"string\"  name='image' id=\"image\" value={image} onChange = {e=> setImage(e.target.value)}required />\r\n      \r\n            </li>\r\n            <li>\r\n                <label htmlFor=\"description\">Product description</label>\r\n                <input type=\"text\" name=\"description\" id=\"description\" value= {description} onChange = {(e)=> setDescription(e.target.value)}  required/>\r\n            </li>\r\n           \r\n            <li>\r\n                 {<button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">{id?'Update':'Create'}</button>}\r\n                 <button className=\"btn btn-lg btn-primary btn-block\" onClick={() => setModelVisible(false)}>Back</button>\r\n\r\n            </li>\r\n            \r\n        </ul> \r\n  \r\n\r\n    </form>\r\n  </div>}\r\n\r\n        \r\n    <div className=\"products-list\">\r\n        <table className=\"admin-product-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Price</th>\r\n                    <th>Image</th>\r\n                    <th>Category</th>\r\n                    <th>brand</th>\r\n                    <th>description</th>\r\n                    <th>rating</th>\r\n                    <th>numreviews</th>\r\n                    <th>countInStock</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {products.map(product=><tr key={product._id}>\r\n                    <td> {product._id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.price}</td>\r\n                    <td>{product.image}</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.brand}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.rating}</td>\r\n                    <td>{product.numreviews}</td>\r\n                    <td>{product.countInStock}</td>\r\n                    <td>\r\n                        <button onClick ={() => openModel(product)}>Edit</button>\r\n                        <button onClick ={()=>productDeleteHandler(product._id)}>Delete</button>\r\n                    </td>\r\n                </tr>)}\r\n                \r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    </div>\r\n    \r\n    \r\n}\r\n\r\nexport default ProductsScreen;","C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\ShippingScreen.jsx",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\components\\checkoutsteps.js",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\PaymentScreen.jsx",[],"C:\\Users\\Dilaram\\Desktop\\amazona project\\frontend\\src\\Screens\\PlaceOrderScreen.jsx",["130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":1,"column":1,"nodeType":"142","endLine":60,"endColumn":2},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":23,"column":9,"nodeType":"145","endLine":23,"endColumn":11,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"147","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"148","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"149","line":21,"column":9,"nodeType":"145","endLine":21,"endColumn":11,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":17,"column":7,"nodeType":"145","endLine":17,"endColumn":9,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":31,"column":29,"nodeType":"155","endLine":31,"endColumn":50},{"ruleId":"136","severity":1,"message":"156","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"157","line":26,"column":7,"nodeType":"145","endLine":26,"endColumn":17,"suggestions":"158"},{"ruleId":"136","severity":1,"message":"156","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"159","line":12,"column":12,"nodeType":"138","messageId":"139","endLine":12,"endColumn":22},{"ruleId":"143","severity":1,"message":"157","line":24,"column":7,"nodeType":"145","endLine":24,"endColumn":17,"suggestions":"160"},{"ruleId":"136","severity":1,"message":"156","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"161","line":4,"column":9,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"162","line":20,"column":12,"nodeType":"138","messageId":"139","endLine":20,"endColumn":19},{"ruleId":"136","severity":1,"message":"163","line":20,"column":30,"nodeType":"138","messageId":"139","endLine":20,"endColumn":35},{"ruleId":"136","severity":1,"message":"164","line":26,"column":21,"nodeType":"138","messageId":"139","endLine":26,"endColumn":34},{"ruleId":"136","severity":1,"message":"165","line":26,"column":66,"nodeType":"138","messageId":"139","endLine":26,"endColumn":77},{"ruleId":"143","severity":1,"message":"149","line":40,"column":7,"nodeType":"145","endLine":40,"endColumn":35,"suggestions":"166"},{"ruleId":"136","severity":1,"message":"167","line":7,"column":11,"nodeType":"138","messageId":"139","endLine":7,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":58,"column":29,"nodeType":"155","endLine":58,"endColumn":50},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["170"],"'useState' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has missing dependencies: 'dispatch', 'product', and 'qty'. Either include them or remove the dependency array.",["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PromiseProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history', 'redirect', and 'user'. Either include them or remove the dependency array.",["173"],"'repassword' is assigned a value but never used.",["174"],"'Link' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'deleteLoading' is assigned a value but never used.","'deleteError' is assigned a value but never used.",["175"],"'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"187","text":"188"},"Update the dependencies array to be: [dispatch]",{"range":"189","text":"190"},"Update the dependencies array to be: [dispatch, product, qty]",{"range":"191","text":"192"},"Update the dependencies array to be: [props.history, redirect, user, userInfo]",{"range":"193","text":"194"},{"range":"195","text":"194"},"Update the dependencies array to be: [saveSuccess, deleteSuccess, dispatch]",{"range":"196","text":"197"},[638,640],"[dispatch, props.match.params.id]",[560,562],"[dispatch]",[551,553],"[dispatch, product, qty]",[727,737],"[props.history, redirect, user, userInfo]",[820,830],[1400,1428],"[saveSuccess, deleteSuccess, dispatch]"]